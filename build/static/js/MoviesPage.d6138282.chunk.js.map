{"version":3,"sources":["Api/Api.jsx","components/MovieList/styles.module.css","components/MovieList/MovieList.jsx","components/MoviesPage/styles.module.css","components/MoviesPage/MoviesPage.jsx"],"names":["axios","defaults","baseURL","params","api_key","language","trending","a","get","data","results","console","log","error","search","query","include_adult","page","fullInfo","movie_id","credirs","reviews","module","exports","MovieList","movies","pathname","useLocation","className","styles","list","map","id","title","listItem","link","to","state","from","MoviePage","location","history","useHistory","useState","slice","input","setInput","setMovies","useEffect","length","then","push","Container","placeholder","value","onChange","target"],"mappings":"iWAKAA,IAAMC,SAASC,QAFE,gCAGjBF,IAAMC,SAASE,OAAS,CACtBC,QALc,mCAMdC,SAAU,SAGZ,IAAMC,EAAQ,uCAAG,8BAAAC,EAAA,+EAEUP,IAAMQ,IAAI,sBAFpB,uBAELC,EAFK,EAELA,KAFK,kBAGNA,EAAKC,SAHC,uCAKbC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALf,kBAMN,IANM,yDAAH,qDAURC,EAAM,uCAAG,WAAMC,GAAN,iBAAAR,EAAA,+EAEYP,IAAMQ,IAAI,eAAgB,CAC/CL,OAAQ,CAAEY,QAAOC,eAAe,EAAOC,KAAM,KAHpC,uBAEHR,EAFG,EAEHA,KAFG,kBAKJA,EAAKC,SALD,uCAOXC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAPjB,kBAQJ,IARI,yDAAH,sDAYNK,EAAQ,uCAAG,WAAMC,GAAN,iBAAAZ,EAAA,+EAEUP,IAAMQ,IAAN,gBAAmBW,IAF7B,uBAELV,EAFK,EAELA,KAFK,kBAGNA,GAHM,uCAKbE,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALf,kBAMN,IANM,yDAAH,sDAURO,EAAO,uCAAG,WAAMD,GAAN,iBAAAZ,EAAA,+EAEWP,IAAMQ,IAAN,gBAAmBW,EAAnB,aAFX,uBAEJV,EAFI,EAEJA,KAFI,kBAGLA,GAHK,uCAKZE,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALhB,kBAML,IANK,yDAAH,sDAUPQ,EAAO,uCAAG,WAAMF,GAAN,iBAAAZ,EAAA,+EAEWP,IAAMQ,IAAN,gBAAmBW,EAAnB,YAAuC,CAC5DhB,OAAQ,CAAEc,KAAM,KAHN,uBAEJR,EAFI,EAEJA,KAFI,kBAKLA,EAAKC,SALA,uCAOZC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAPhB,kBAQL,IARK,yDAAH,uD,mBCpDbS,EAAOC,QAAU,CAAC,KAAO,qBAAqB,SAAW,yBAAyB,KAAO,uB,iHC4B1EC,EAzBG,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACXC,EAAaC,cAAbD,SACAZ,EAAWa,cAAXb,OAER,OACE,mCACE,oBAAIc,UAAWC,IAAOC,KAAtB,SACGL,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,oBAAIL,UAAWC,IAAOK,SAAtB,SACE,cAAC,IAAD,CACEN,UAAWC,IAAOM,KAClBC,GAAI,CACFV,SAAS,WAAD,OAAaM,GACrBK,MAAO,CAAEC,KAAMZ,EAAUZ,OAAQA,IAJrC,SAOGmB,KARgCD,Y,mBCX/CV,EAAOC,QAAU,CAAC,MAAQ,wB,yJCsCXgB,EAhCG,WAChB,IAAMC,EAAWb,cACXc,EAAUC,cAFM,EAGIC,mBAASH,EAAS1B,OAAO8B,MAAM,IAHnC,mBAGfC,EAHe,KAGRC,EAHQ,OAIMH,mBAAS,IAJf,mBAIflB,EAJe,KAIPsB,EAJO,KAmBtB,OATAC,qBAAU,WACJH,EAAMI,OAAS,GACjBnC,YAAO+B,GAAOK,MAAK,SAAAzC,GAAI,OAAIsC,EAAUtC,MACrCgC,EAAQU,KAAK,CAAErC,OAAO,SAAD,OAAW+B,MAEhCE,EAAU,MAEX,CAACF,IAGF,eAACO,EAAA,EAAD,WACE,uBACExB,UAAWC,IAAOgB,MAClBQ,YAAY,SACZC,MAAOT,EACPU,SAnBN,YAA8C,IAAZD,EAAW,EAArBE,OAAUF,MAChCR,EAASQ,MAoBP,cAAC9B,EAAA,EAAD,CAAWC,OAAQA","file":"static/js/MoviesPage.d6138282.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'ab913aab0cc65677a88cac6e0bf2cdf4';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst trending = async () => {\n  try {\n    const { data } = await axios.get('trending/movie/day');\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nconst search = async query => {\n  try {\n    const { data } = await axios.get('search/movie', {\n      params: { query, include_adult: false, page: 1 },\n    });\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nconst fullInfo = async movie_id => {\n  try {\n    const { data } = await axios.get(`movie/${movie_id}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nconst credirs = async movie_id => {\n  try {\n    const { data } = await axios.get(`movie/${movie_id}/credits`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nconst reviews = async movie_id => {\n  try {\n    const { data } = await axios.get(`movie/${movie_id}/reviews`, {\n      params: { page: 1 },\n    });\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport { trending, search, fullInfo, credirs, reviews };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__1eSHg\",\"listItem\":\"styles_listItem__2EHff\",\"link\":\"styles_link__2_KVq\"};","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport styles from './styles.module.css';\n\nconst MovieList = ({ movies }) => {\n  const { pathname } = useLocation();\n  const { search } = useLocation();\n\n  return (\n    <>\n      <ul className={styles.list}>\n        {movies.map(({ id, title }) => (\n          <li className={styles.listItem} key={id}>\n            <NavLink\n              className={styles.link}\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: pathname, search: search },\n              }}\n            >\n              {title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"styles_input__14NOg\"};","import { React, useState, useEffect } from 'react';\nimport MovieList from '../MovieList';\nimport { search } from '../../Api';\nimport { useHistory, useLocation } from 'react-router';\nimport Container from '../Container';\nimport styles from './styles.module.css';\n\nconst MoviePage = () => {\n  const location = useLocation();\n  const history = useHistory();\n  const [input, setInput] = useState(location.search.slice(7));\n  const [movies, setMovies] = useState([]);\n\n  function inputHendler({ target: { value } }) {\n    setInput(value);\n  }\n\n  useEffect(() => {\n    if (input.length > 0) {\n      search(input).then(data => setMovies(data));\n      history.push({ search: `query=${input}` });\n    } else {\n      setMovies([]);\n    }\n  }, [input]);\n\n  return (\n    <Container>\n      <input\n        className={styles.input}\n        placeholder=\"Search\"\n        value={input}\n        onChange={inputHendler}\n      />\n      <MovieList movies={movies} />\n    </Container>\n  );\n};\n\nexport default MoviePage;\n"],"sourceRoot":""}